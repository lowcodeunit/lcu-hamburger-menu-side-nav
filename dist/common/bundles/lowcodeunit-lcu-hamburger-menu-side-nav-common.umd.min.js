!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/common"),require("@angular/core"),require("@angular/cdk/layout"),require("rxjs"),require("rxjs/operators"),require("@angular/flex-layout"),require("@lcu-ide/common"),require("@angular/material")):"function"==typeof define&&define.amd?define("@lowcodeunit/lcu-hamburger-menu-side-nav-common",["exports","@angular/common","@angular/core","@angular/cdk/layout","rxjs","rxjs/operators","@angular/flex-layout","@lcu-ide/common","@angular/material"],n):n((e.lowcodeunit=e.lowcodeunit||{},e.lowcodeunit["lcu-hamburger-menu-side-nav-common"]={}),e.ng.common,e.ng.core,e.ng.cdk.layout,e.rxjs,e.rxjs.operators,e.ng["flex-layout"],e.common$1,e.ng.material)}(this,function(e,n,t,r,o,a,i,s,u){"use strict";var c=(d.prototype.ngOnInit=function(){},d.prototype.ngAfterContentInit=function(){var n=this;this.openedSubject.subscribe(function(e){return n.sidenav[e?"open":"close"]()})},d.prototype.toggleDrawer=function(){this.openedSubject.next(!this.sidenav.opened)},d.decorators=[{type:t.Component,args:[{selector:"lcu-side-nav",template:'<mat-sidenav-container class="mat-sidenav-container" [hasBackdrop]="false">\r\n  <mat-sidenav-content class="mat-sidenav-content">\r\n      <button  class="hamburger-menu" mat-icon-button (click)="toggleDrawer()">\r\n        <mat-icon [inline]="true">menu</mat-icon>\r\n      </button>\r\n    </mat-sidenav-content>\r\n      \x3c!-- Builds the hamburger menu from the items in the constants.ts file--\x3e\r\n      <mat-sidenav class="side-nav" #sidenav mode="side"  >\r\n        <div class="mat-drawer-inner-container"  (click)="toggleDrawer()" >\r\n          <button class="hamburger-menu" mat-icon-button>\r\n              <mat-icon [inline]="true">menu</mat-icon>\r\n            </button>\r\n            \x3c!--  --\x3e\r\n        <div class="button-container" fxLayout="column" fxLayoutAlign="space-between" >\r\n        <button class="item-button"  mat-menu-item  fxLayoutAlign="space-between center"  *ngFor= "let item of MenuItems" \r\n          [disabled]= item.Disabled [routerLink]=[item.Url,item.Param] >\r\n          \x3c!-- <mat-icon *ngIf="item.Icon">{{ item.Icon }}</mat-icon> --\x3e\r\n          <span>{{ item.Label }}</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n      </mat-sidenav>\r\n</mat-sidenav-container>\r\n\r\n     ',styles:[".hamburger-menu{background-color:transparent;border-width:0;outline:0;font-size:30px}.mat-sidenav-container{width:97.5vw;background-color:transparent;z-index:20}.mat-sidenav-content{height:100vh;background-color:transparent;width:40px}.side-nav{height:100vh;width:100vw;background-color:transparent;border-right:transparent}.button-container{height:75vh;background-color:transparent;z-index:10;width:210px}.item-button{height:40px;width:100%;background-color:#fff;font-size:20px}.item-button:hover{background-color:Grey}"]}]}],d.ctorParameters=function(){return[{type:r.BreakpointObserver}]},d.propDecorators={MenuItems:[{type:t.Input,args:["menu-items"]}],sidenav:[{type:t.ViewChild,args:["sidenav"]}]},d);function d(e){this.breakpointObserver=e,this.isHandset$=this.breakpointObserver.observe(r.Breakpoints.Handset).pipe(a.map(function(e){return e.matches})),this.openedSubject=new o.Subject}var m=(l.decorators=[{type:t.NgModule,args:[{declarations:[c],imports:[n.CommonModule,i.FlexLayoutModule,s.FathymSharedModule,s.MaterialModule,u.MatSidenavModule,u.MatIconModule],exports:[c],entryComponents:[c]}]}],l);function l(){}function p(e,n,t,r,o){this.Icon=t,this.Label=e,this.Url=n,this.Param=r,this.Disabled=o}e.LcuHamburgerMenuSideNavModule=m,e.SideNavComponent=c,e.NavLinkModel=p,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=lowcodeunit-lcu-hamburger-menu-side-nav-common.umd.min.js.map