!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/common"),require("@angular/core"),require("@angular/cdk/layout"),require("rxjs/operators"),require("@angular/flex-layout"),require("@lcu-ide/common"),require("@angular/material")):"function"==typeof define&&define.amd?define("@lowcodeunit/lcu-hamburger-menu-side-nav-common",["exports","@angular/common","@angular/core","@angular/cdk/layout","rxjs/operators","@angular/flex-layout","@lcu-ide/common","@angular/material"],n):n((e.lowcodeunit=e.lowcodeunit||{},e.lowcodeunit["lcu-hamburger-menu-side-nav-common"]={}),e.ng.common,e.ng.core,e.ng.cdk.layout,e.rxjs.operators,e.ng["flex-layout"],e.common$1,e.ng.material)}(this,function(e,n,t,o,r,a,i,s){"use strict";var u=(c.prototype.ngOnInit=function(){},c.prototype.toggleDrawer=function(){this.sidenav.opened?(this.sidenav.close(),this.SideOpen=!1):(this.sidenav.open(),this.SideOpen=!0)},c.decorators=[{type:t.Component,args:[{selector:"lcu-side-nav",template:'<mat-sidenav-container class="mat-sidenav-container">\r\n  <mat-sidenav-content class="mat-sidenav-content">\r\n      <button *ngIf="SideOpen === false"class="hamburger-menu" mat-icon-button (click)="toggleDrawer()">\r\n        <mat-icon [inline]="true">menu</mat-icon>\r\n      </button>\r\n    </mat-sidenav-content>\r\n      \x3c!-- Builds the hamburger menu from the items in the constants.ts file--\x3e\r\n      <mat-sidenav class="side-nav" #sidenav mode="side"  >\r\n          <button class="hamburger-menu" mat-icon-button (click)="toggleDrawer()">\r\n              <mat-icon [inline]="true">menu</mat-icon>\r\n            </button>\r\n            \x3c!--  --\x3e\r\n        <div class="button-container" fxLayout="column" fxLayoutAlign="space-between" >\r\n        <button class="item-button"  mat-menu-item  fxLayoutAlign="space-between center"  *ngFor= "let item of MenuItems" \r\n          [disabled]= item.Disabled [routerLink]=[item.Url,item.Param]>\r\n          \x3c!-- <mat-icon *ngIf="item.Icon">{{ item.Icon }}</mat-icon> --\x3e\r\n          <span>{{ item.Label }}</span>\r\n        </button>\r\n      </div>\r\n      </mat-sidenav>\r\n</mat-sidenav-container>\r\n\r\n     ',styles:[".hamburger-menu{background-color:transparent;border-width:0;outline:0;font-size:30px}.mat-sidenav-container{width:210px;background-color:transparent}.mat-sidenav-content{height:100vh;background-color:transparent;width:40px}.side-nav{height:100vh;background-color:transparent;border-right:transparent}.button-container{height:75vh;background-color:transparent;z-index:10;width:210px}.item-button{height:40px;width:100%;background-color:#fff;font-size:20px}.item-button:hover{background-color:Grey}"]}]}],c.ctorParameters=function(){return[{type:o.BreakpointObserver}]},c.propDecorators={MenuItems:[{type:t.Input}],sidenav:[{type:t.ViewChild,args:["sidenav"]}]},c);function c(e){this.breakpointObserver=e,this.isHandset$=this.breakpointObserver.observe(o.Breakpoints.Handset).pipe(r.map(function(e){return e.matches})),this.SideOpen=!1}var d=(l.decorators=[{type:t.NgModule,args:[{declarations:[u],imports:[n.CommonModule,a.FlexLayoutModule,i.FathymSharedModule,i.MaterialModule,s.MatSidenavModule,s.MatIconModule],exports:[u],entryComponents:[u]}]}],l);function l(){}function m(e,n,t,o,r){this.Icon=t,this.Label=e,this.Url=n,this.Param=o,this.Disabled=r}e.LcuHamburgerMenuSideNavModule=d,e.SideNavComponent=u,e.NavLinkModel=m,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=lowcodeunit-lcu-hamburger-menu-side-nav-common.umd.min.js.map