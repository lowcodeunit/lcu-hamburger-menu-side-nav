!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("@angular/common"),require("@angular/material/sidenav"),require("@angular/cdk/layout"),require("rxjs/operators"),require("@angular/platform-browser/animations"),require("@angular/flex-layout"),require("@lcu/common"),require("@angular/forms"),require("@angular/material/icon")):"function"==typeof define&&define.amd?define("@lowcodeunit/lcu-hamburger-menu-side-nav-common",["exports","@angular/core","@angular/common","@angular/material/sidenav","@angular/cdk/layout","rxjs/operators","@angular/platform-browser/animations","@angular/flex-layout","@lcu/common","@angular/forms","@angular/material/icon"],n):n(((e=e||self).lowcodeunit=e.lowcodeunit||{},e.lowcodeunit["lcu-hamburger-menu-side-nav-common"]={}),e.ng.core,e.ng.common,e.ng.material.sidenav,e.ng.cdk.layout,e.rxjs.operators,e.ng.platformBrowser.animations,e.ng["flex-layout"],e.common$1,e.ng.forms,e.ng.material.icon)}(this,(function(e,n,t,r,a,o,i,u,s,c,l){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */function m(e,n,t,r){var a,o=arguments.length,i=o<3?n:null===r?r=Object.getOwnPropertyDescriptor(n,t):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,n,t,r);else for(var u=e.length-1;u>=0;u--)(a=e[u])&&(i=(o<3?a(i):o>3?a(n,t,i):a(n,t))||i);return o>3&&i&&Object.defineProperty(n,t,i),i}function d(e,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,n)}var p=function(){function e(e){this.breakpointObserver=e,this.isHandset$=this.breakpointObserver.observe(a.Breakpoints.Handset).pipe(o.map((function(e){return e.matches}))),this.SideOpen=!1}return e.prototype.toggleDrawer=function(){this.sidenav.opened?(this.sidenav.close(),this.SideOpen=!1):(this.sidenav.open(),this.SideOpen=!0)},e.ctorParameters=function(){return[{type:a.BreakpointObserver}]},m([n.Input(),d("design:type",Array)],e.prototype,"MenuItems",void 0),m([n.ViewChild("sidenav",{static:!1}),d("design:type",r.MatSidenav)],e.prototype,"sidenav",void 0),e=m([n.Component({selector:"lcu-side-nav",template:'<mat-sidenav-container class="mat-sidenav-container">\r\n  <mat-sidenav-content class="mat-sidenav-content">\r\n      <button *ngIf="SideOpen === false"class="hamburger-menu" mat-icon-button (click)="toggleDrawer()">\r\n        <mat-icon [inline]="true">menu</mat-icon>\r\n      </button>\r\n    </mat-sidenav-content>\r\n      \x3c!-- Builds the hamburger menu from the items in the constants.ts file--\x3e\r\n      <mat-sidenav class="side-nav" #sidenav mode="side"  >\r\n          <button class="hamburger-menu" mat-icon-button (click)="toggleDrawer()">\r\n              <mat-icon [inline]="true">menu</mat-icon>\r\n            </button>\r\n        <div class="button-container" fxLayout="column" fxLayoutAlign="space-around" >\r\n        <button class="item-button"  mat-menu-item  fxLayoutAlign="space-around center"  *ngFor= "let item of MenuItems" \r\n          [disabled]= item.Disabled [routerLink]=[item.Url,item.Param]>\r\n          \x3c!-- <mat-icon *ngIf="item.Icon">{{ item.Icon }}</mat-icon> --\x3e\r\n          <span>{{ item.Label }}</span>\r\n        </button>\r\n      </div>\r\n      </mat-sidenav>\r\n</mat-sidenav-container>\r\n\r\n     ',styles:[".hamburger-menu{background-color:transparent;border-width:0;outline:0;font-size:30px}.mat-sidenav-container{width:150px;background-color:transparent}.mat-sidenav-content{height:100vh;background-color:transparent;width:40px}.side-nav{height:100vh;background-color:transparent;border-right:transparent}.button-container{height:50vh;background-color:transparent;z-index:10}.item-button{width:100%;background-color:#f5f5f5}"]}),d("design:paramtypes",[a.BreakpointObserver])],e)}(),f=function(){function e(){}return e=m([n.NgModule({declarations:[p],imports:[t.CommonModule,i.BrowserAnimationsModule,u.FlexLayoutModule,s.FathymSharedModule,s.MaterialModule,c.FormsModule,c.ReactiveFormsModule,r.MatSidenavModule,l.MatIconModule],exports:[p],entryComponents:[p]})],e)}(),g=function(e,n,t,r,a){this.Icon=t,this.Label=e,this.Url=n,this.Param=r,this.Disabled=a};e.LcuHamburgerMenuSideNavModule=f,e.NavLinkModel=g,e.SideNavComponent=p,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=lowcodeunit-lcu-hamburger-menu-side-nav-common.umd.min.js.map