{"version":3,"sources":["../common/src/lib/controls/side-nav/side-nav.component.html","../common/src/lib/controls/side-nav/side-nav.component.ts","../common/src/lib/lcu-hamburger-menu-side-nav.module.ts","./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/utils/constants/navigation.constants.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["<mat-sidenav-container  class=\"mat-sidenav-container\" [hasBackdrop]=\"false\" [ngStyle]=\"{width: MatContainerWidth}\">\r\n  <mat-sidenav-content class=\"mat-sidenav-content\" [ngStyle]=\"{width: MatContentWidth, height: MatContentHeight}\">\r\n    <button  class=\"hamburger-menu\" mat-icon-button (click)=\"toggleDrawer()\" >\r\n      <mat-icon [inline]=\"true\" (mouseover)=\"OnHover()\" (mouseleave)=\"LeaveHover()\"[ngStyle]=\"{'color':MenuBGColor}\" >menu</mat-icon>\r\n    </button>\r\n  </mat-sidenav-content>\r\n  <!-- Builds the hamburger menu from the items in the constants.ts file-->\r\n  <mat-sidenav class=\"side-nav\" #sidenav mode=\"side\" (click)=\"toggleDrawer()\">\r\n    <button class=\"hamburger-menu\" mat-icon-button>\r\n      <mat-icon [inline]=\"true\" (mouseover)=\"OnHover()\" (mouseleave)=\"LeaveHover()\"[ngStyle]=\"{'color':MenuBGColor}\">menu</mat-icon>\r\n    </button>\r\n    <!--  -->\r\n    <div class=\"button-container\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n        <!-- [ngStyle]=\"setButtonStyles()\" (mouseover)=\"OnButtonHover()\" (mouseleave)=\"LeaveButtonHover()\" -->\r\n      <button class=\"item-button\" mat-menu-item fxLayoutAlign=\"start center\" \r\n      [ngStyle]=\"{'color':FontColor}\"\r\n      *ngFor=\"let item of MenuItems\"\r\n        [disabled]=item.Disabled (click)=\"ButtonClicked(item)\" >\r\n        <div [attr.id]=\"'button-' + item.Label\" fxLayoutAlign=\"start center\" >\r\n        <mat-icon class=\"button-icon\" *ngIf=\"item.Icon\">{{ item.Icon }}</mat-icon>\r\n        <span class=\"button-title\">{{ item.Label }}</span>\r\n      </div>\r\n      <!-- <div class=\"button-border\"></div> -->\r\n      </button>\r\n      \r\n    </div>\r\n    \r\n  </mat-sidenav>\r\n</mat-sidenav-container>","import { MatSidenav } from '@angular/material/sidenav';\r\nimport { Breakpoints, BreakpointState, BreakpointObserver } from '@angular/cdk/layout';\r\nimport { Component, Input, ViewChild } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Output, EventEmitter } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { NavLinkModel } from '../../models/nav-link.model';\r\n\r\n\r\n@Component({\r\n  selector: 'lcu-side-nav',\r\n  templateUrl: './side-nav.component.html',\r\n  styleUrls: ['./side-nav.component.scss']  \r\n})\r\n\r\nexport class SideNavComponent {\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map((result: BreakpointState) => result.matches)\r\n    );\r\n\r\n  protected _navLinks: Array<NavLinkModel>;\r\n\r\n  @Output('nav-item-clicked')\r\n  public NavItemClicked: EventEmitter<any>;\r\n/**\r\n * The items in the button icon,title, link\r\n */\r\n  @Input('menu-items')\r\n  public MenuItems: Array<NavLinkModel>;\r\n\r\n  /**\r\n   * public openedSubject: Subject<boolean>;\r\n   * detects if the button has been clicked\r\n   */\r\n  @Input('opened-subject')\r\n  public openedSubject: Subject<boolean>\r\n/**\r\n * The color of the menu Icon\r\n */\r\n  @Input('menu-color')\r\n  public MenuColor: string;\r\n/**\r\n * The color of the menu icon when hover \r\n */\r\n  @Input('hover-menu-color')\r\n  public HoverMenuColor: string;\r\n/**\r\n * The width of the side nav content\r\n */\r\n  @Input('mat-content-width')\r\n  public MatContentWidth: string;\r\n/**\r\n * The height of the side nav content\r\n */\r\n  @Input('mat-content-height')\r\n  public MatContentHeight: string;\r\n/**\r\n * The width of the side nav container\r\n */\r\n  @Input('mat-container-width')\r\n  public MatContainerWidth: string;\r\n/**\r\n * the background color of the buttons in menu\r\n */\r\n  @Input('button-background-color')\r\n  public ButtonBackgroundColor: string;\r\n/**\r\n * TODO when hover color is assigned all buttons display that color\r\n */\r\n  @Input('button-background-color-hover')\r\n  public ButtonBackgroundColorHover:string;\r\n/**\r\n * The font color of both the icons and the text in the menu\r\n */\r\n  @Input('font-color')\r\n  public FontColor: string;\r\n\r\n  public MenuBGColor: string;\r\n  public ButtonBGColor: string;\r\n  public ButtonHover: boolean;\r\n\r\n  @ViewChild('sidenav', { static: false }) public sidenav: MatSidenav;\r\n\r\n  // public MenuColor: string;\r\n\r\n  constructor(protected breakpointObserver: BreakpointObserver) {\r\n    this.NavItemClicked = new EventEmitter<any>();\r\n    this.openedSubject = new Subject<boolean>();\r\n    this.MatContentWidth = \"50px\";\r\n    this.MatContentHeight = \"40px\";\r\n    this.MatContainerWidth = \"50px\";\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.setDefaultStyles();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.openedSubject.subscribe((result: boolean) => {\r\n      this.sidenav[result ? 'open' : 'close']()\r\n      this.setStyles();\r\n    });\r\n  }\r\n\r\n  public ButtonClicked(button: any) {\r\n    this.NavItemClicked.emit(button);\r\n  }\r\n\r\n\r\n  public toggleDrawer() {\r\n    this.openedSubject.next(!this.sidenav.opened);\r\n    if (!this.sidenav.opened) {\r\n      this.MatContentWidth = \"50px\";\r\n      this.MatContainerWidth = \"50px\";\r\n      this.MatContentHeight = \"40px\";\r\n      // console.log(\"sidenav closed\", this.MatContentWidth);\r\n    }\r\n    else {\r\n      this.MatContentWidth = \"0px\";\r\n      this.MatContentHeight = \"94vh\";//94vh\r\n      this.MatContainerWidth = \"230px\";\r\n      // console.log(\"sidenav open\", this.MatContentWidth);\r\n\r\n    }\r\n  }\r\n  public OnHover(): void {\r\n    this.MenuBGColor = this.HoverMenuColor;\r\n  }\r\n\r\n  public OnButtonHover():void{\r\n    // this.ButtonBGColor = this.ButtonBackgroundColorHover;\r\n    this.ButtonHover = true;\r\n  }\r\n\r\n  public LeaveHover(): void {\r\n    this.MenuBGColor = this.MenuColor;\r\n  }\r\n\r\n  public LeaveButtonHover():void{\r\n    // this.ButtonBGColor = this.ButtonBackgroundColor;\r\n    this.ButtonHover = false;\r\n  }\r\n\r\n  // public setButtonStyles() {\r\n  //   let styles = {\r\n  //     'background-color': this.ButtonHover ? this.ButtonBackgroundColorHover : this.ButtonBackgroundColor\r\n  //   };\r\n  //   return styles;\r\n  // }\r\n  protected setStyles(): void {\r\n    this.MatContentWidth = \"50px\";\r\n    this.MatContainerWidth = \"50px\";\r\n    this.MatContentHeight = \"40px\";\r\n  }\r\n\r\n  protected setDefaultStyles(): void {\r\n    this.setStyles();\r\n\r\n    if(!this.FontColor){\r\n      this.FontColor = 'black';\r\n    }\r\n\r\n    if(!this.ButtonBackgroundColorHover){\r\n      this.ButtonBackgroundColorHover = \"grey\"//#96957\r\n    }\r\n    if(!this.ButtonBackgroundColor){\r\n      this.ButtonBackgroundColor = \"white\"//#96957\r\n    }\r\n\r\n    if (!this.MenuColor) {\r\n      this.MenuBGColor = 'black';\r\n    }\r\n    this.MenuBGColor = this.MenuColor;\r\n    if (!this.HoverMenuColor) {\r\n      this.HoverMenuColor = 'grey';\r\n    }\r\n  }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SideNavComponent } from './controls/side-nav/side-nav.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FathymSharedModule, MaterialModule } from '@lcu/common';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@NgModule({\r\n  declarations: [SideNavComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FlexLayoutModule,\r\n    FathymSharedModule,\r\n    MaterialModule,\r\n    MatSidenavModule,\r\n    MatIconModule\r\n  ],\r\n  exports: [SideNavComponent],\r\n  entryComponents: [SideNavComponent]\r\n})\r\nexport class LcuHamburgerMenuSideNavModule { }\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'landingPage', pathMatch: 'full'},\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","    <!-- [opened-subject]=\"openedSubject\" -->\r\n    <lcu-side-nav (nav-item-clicked)=\"NavItemClicked($event)\" \r\n    [menu-items]=\"Items\" \r\n    [opened-subject]=\"openedSubject\" \r\n    [menu-color]=\"Color\" \r\n    [hover-menu-color]=\"HoverColor\"\r\n    [button-background-color]=\"ButtonBgColor\"\r\n    [button-background-color-hover]=\"ButtonHoverBgColor\"\r\n    [font-color]=\"FontColor\"></lcu-side-nav>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { OverlayContainer } from '@angular/cdk/overlay';\r\nimport { NavigationConstants } from './utils/constants/navigation.constants';\r\nimport { NavLinkModel } from 'projects/common/src/lib/models/nav-link.model';\r\nimport { Subject } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'lcu-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\n\r\nexport class AppComponent implements OnInit {\r\n\r\n  public Items: Array<NavLinkModel> = new Array<NavLinkModel>();\r\n\r\n  public Color: string;\r\n  public HoverColor: string;\r\n  public ButtonBgColor: string;\r\n  public ButtonHoverBgColor: string;\r\n  public FontColor: string;\r\n  openedSubject = new Subject<boolean>();\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected activatedRoute: ActivatedRoute,\r\n    protected overlayContainer: OverlayContainer) {\r\n      this.Color = 'black';\r\n      this.HoverColor = '#FF9849';\r\n      this.ButtonBgColor = 'white';\r\n      this.ButtonHoverBgColor = 'red';//'#f4f4f3'\r\n      this.FontColor = '#8b868d';\r\n\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.Items = NavigationConstants.MENU_ITEMS;\r\n  }\r\n\r\n  public toggleSide(){\r\n    this.openedSubject.next(false);\r\n  }\r\n\r\n  public NavItemClicked(item: any) {\r\n    console.log(item);\r\n  }\r\n\r\n}\r\n","import { LcuHamburgerMenuSideNavModule } from './../../../common/src/lib/lcu-hamburger-menu-side-nav.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FathymSharedModule, MaterialModule } from '@lcu/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSidenavModule } from '@angular/material/sidenav'\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    FlexLayoutModule,\r\n    FathymSharedModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    LcuHamburgerMenuSideNavModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NavLinkModel } from 'projects/common/src/lib/models/nav-link.model';\r\n\r\n// @dynamic\r\n/**\r\n * @dynamic is used because this class contains static properties\r\n *\r\n * Used to build the items in the navigation menu\r\n */\r\n\r\nexport class NavigationConstants{\r\n    public static readonly MENU_ITEMS: Array<NavLinkModel> = [\r\n        {Label: 'Maps', Url:'/landingPage', Disabled:'false', Icon: 'map',},\r\n        {Label: 'Iteneraries', Url:'', Disabled:'false', Icon: 'public'},\r\n        {Label: 'Top Lists', Url:'www', Disabled:'true', Icon: 'sort'},\r\n        {Label: 'Albums', Url:'www', Disabled:'true', Icon: 'photo_library'},\r\n        {Label: 'Friends', Url:'www', Disabled:'true', Icon: 'photo_library'},\r\n        {Label: 'Profile', Url:'www', Disabled:'true', Icon: 'person'}];\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}