{"version":3,"sources":["webpack:///common/src/lib/controls/side-nav/side-nav.component.html","webpack:///common/src/lib/controls/side-nav/side-nav.component.ts","webpack:///common/src/lib/lcu-hamburger-menu-side-nav.module.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/utils/constants/navigation.constants.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["SideNavComponent","breakpointObserver","isHandset$","observe","Handset","pipe","result","matches","NavItemClicked","openedSubject","MatContentWidth","MatContentHeight","MatContainerWidth","setDefaultStyles","subscribe","sidenav","setStyles","button","emit","next","opened","MenuBGColor","HoverMenuColor","ButtonHover","MenuColor","FontColor","ButtonBackgroundColorHover","ButtonBackgroundColor","LcuHamburgerMenuSideNavModule","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","AppRoutingModule","AppComponent","router","activatedRoute","overlayContainer","Items","Array","Color","HoverColor","ButtonBgColor","ButtonHoverBgColor","MENU_ITEMS","item","console","log","AppModule","NavigationConstants","Label","Url","Disabled","Icon","environment","production","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["<mat-sidenav-container  class=\"mat-sidenav-container\" [hasBackdrop]=\"false\" [ngStyle]=\"{width: MatContainerWidth}\">\r\n  <mat-sidenav-content class=\"mat-sidenav-content\" [ngStyle]=\"{width: MatContentWidth, height: MatContentHeight}\">\r\n    <button  class=\"hamburger-menu\" mat-icon-button (click)=\"toggleDrawer()\" >\r\n      <mat-icon [inline]=\"true\" (mouseover)=\"OnHover()\" (mouseleave)=\"LeaveHover()\"[ngStyle]=\"{'color':MenuBGColor}\" >menu</mat-icon>\r\n    </button>\r\n  </mat-sidenav-content>\r\n  <!-- Builds the hamburger menu from the items in the constants.ts file-->\r\n  <mat-sidenav class=\"side-nav\" #sidenav mode=\"side\" (click)=\"toggleDrawer()\">\r\n    <button class=\"hamburger-menu\" mat-icon-button>\r\n      <mat-icon [inline]=\"true\" (mouseover)=\"OnHover()\" (mouseleave)=\"LeaveHover()\"[ngStyle]=\"{'color':MenuBGColor}\">menu</mat-icon>\r\n    </button>\r\n    <!--  -->\r\n    <div class=\"button-container\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n        <!-- [ngStyle]=\"setButtonStyles()\" (mouseover)=\"OnButtonHover()\" (mouseleave)=\"LeaveButtonHover()\" -->\r\n      <button class=\"item-button\" mat-menu-item fxLayoutAlign=\"start center\" \r\n      [ngStyle]=\"{'color':FontColor}\"\r\n      *ngFor=\"let item of MenuItems\"\r\n        [disabled]=item.Disabled (click)=\"ButtonClicked(item)\" >\r\n        <div [attr.id]=\"'button-' + item.Label\" fxLayoutAlign=\"start center\" >\r\n        <mat-icon class=\"button-icon\" *ngIf=\"item.Icon\">{{ item.Icon }}</mat-icon>\r\n        <span class=\"button-title\">{{ item.Label }}</span>\r\n      </div>\r\n      <!-- <div class=\"button-border\"></div> -->\r\n      </button>\r\n      \r\n    </div>\r\n    \r\n  </mat-sidenav>\r\n</mat-sidenav-container>","import { MatSidenav } from '@angular/material/sidenav';\r\nimport { Breakpoints, BreakpointState, BreakpointObserver } from '@angular/cdk/layout';\r\nimport { Component, Input, ViewChild } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Output, EventEmitter } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { NavLinkModel } from '../../models/nav-link.model';\r\n\r\n\r\n@Component({\r\n  selector: 'lcu-side-nav',\r\n  templateUrl: './side-nav.component.html',\r\n  styleUrls: ['./side-nav.component.scss']  \r\n})\r\n\r\nexport class SideNavComponent {\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map((result: BreakpointState) => result.matches)\r\n    );\r\n\r\n  protected _navLinks: Array<NavLinkModel>;\r\n\r\n  @Output('nav-item-clicked')\r\n  public NavItemClicked: EventEmitter<any>;\r\n/**\r\n * The items in the button icon,title, link\r\n */\r\n  @Input('menu-items')\r\n  public MenuItems: Array<NavLinkModel>;\r\n\r\n  /**\r\n   * public openedSubject: Subject<boolean>;\r\n   * detects if the button has been clicked\r\n   */\r\n  @Input('opened-subject')\r\n  public openedSubject: Subject<boolean>\r\n/**\r\n * The color of the menu Icon\r\n */\r\n  @Input('menu-color')\r\n  public MenuColor: string;\r\n/**\r\n * The color of the menu icon when hover \r\n */\r\n  @Input('hover-menu-color')\r\n  public HoverMenuColor: string;\r\n/**\r\n * The width of the side nav content\r\n */\r\n  @Input('mat-content-width')\r\n  public MatContentWidth: string;\r\n/**\r\n * The height of the side nav content\r\n */\r\n  @Input('mat-content-height')\r\n  public MatContentHeight: string;\r\n/**\r\n * The width of the side nav container\r\n */\r\n  @Input('mat-container-width')\r\n  public MatContainerWidth: string;\r\n/**\r\n * the background color of the buttons in menu\r\n */\r\n  @Input('button-background-color')\r\n  public ButtonBackgroundColor: string;\r\n/**\r\n * TODO when hover color is assigned all buttons display that color\r\n */\r\n  @Input('button-background-color-hover')\r\n  public ButtonBackgroundColorHover:string;\r\n/**\r\n * The font color of both the icons and the text in the menu\r\n */\r\n  @Input('font-color')\r\n  public FontColor: string;\r\n\r\n  public MenuBGColor: string;\r\n  public ButtonBGColor: string;\r\n  public ButtonHover: boolean;\r\n\r\n  @ViewChild('sidenav', { static: false }) public sidenav: MatSidenav;\r\n\r\n  // public MenuColor: string;\r\n\r\n  constructor(protected breakpointObserver: BreakpointObserver) {\r\n    this.NavItemClicked = new EventEmitter<any>();\r\n    this.openedSubject = new Subject<boolean>();\r\n    this.MatContentWidth = \"50px\";\r\n    this.MatContentHeight = \"40px\";\r\n    this.MatContainerWidth = \"50px\";\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.setDefaultStyles();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.openedSubject.subscribe((result: boolean) => {\r\n      this.sidenav[result ? 'open' : 'close']()\r\n      this.setStyles();\r\n    });\r\n  }\r\n\r\n  public ButtonClicked(button: any) {\r\n    this.NavItemClicked.emit(button);\r\n  }\r\n\r\n\r\n  public toggleDrawer() {\r\n    this.openedSubject.next(!this.sidenav.opened);\r\n    if (!this.sidenav.opened) {\r\n      this.MatContentWidth = \"50px\";\r\n      this.MatContainerWidth = \"50px\";\r\n      this.MatContentHeight = \"40px\";\r\n      // console.log(\"sidenav closed\", this.MatContentWidth);\r\n    }\r\n    else {\r\n      this.MatContentWidth = \"0px\";\r\n      this.MatContentHeight = \"94vh\";//94vh\r\n      this.MatContainerWidth = \"230px\";\r\n      // console.log(\"sidenav open\", this.MatContentWidth);\r\n\r\n    }\r\n  }\r\n  public OnHover(): void {\r\n    this.MenuBGColor = this.HoverMenuColor;\r\n  }\r\n\r\n  public OnButtonHover():void{\r\n    // this.ButtonBGColor = this.ButtonBackgroundColorHover;\r\n    this.ButtonHover = true;\r\n  }\r\n\r\n  public LeaveHover(): void {\r\n    this.MenuBGColor = this.MenuColor;\r\n  }\r\n\r\n  public LeaveButtonHover():void{\r\n    // this.ButtonBGColor = this.ButtonBackgroundColor;\r\n    this.ButtonHover = false;\r\n  }\r\n\r\n  // public setButtonStyles() {\r\n  //   let styles = {\r\n  //     'background-color': this.ButtonHover ? this.ButtonBackgroundColorHover : this.ButtonBackgroundColor\r\n  //   };\r\n  //   return styles;\r\n  // }\r\n  protected setStyles(): void {\r\n    this.MatContentWidth = \"50px\";\r\n    this.MatContainerWidth = \"50px\";\r\n    this.MatContentHeight = \"40px\";\r\n  }\r\n\r\n  protected setDefaultStyles(): void {\r\n    this.setStyles();\r\n\r\n    if(!this.FontColor){\r\n      this.FontColor = 'black';\r\n    }\r\n\r\n    if(!this.ButtonBackgroundColorHover){\r\n      this.ButtonBackgroundColorHover = \"grey\"//#96957\r\n    }\r\n    if(!this.ButtonBackgroundColor){\r\n      this.ButtonBackgroundColor = \"white\"//#96957\r\n    }\r\n\r\n    if (!this.MenuColor) {\r\n      this.MenuBGColor = 'black';\r\n    }\r\n    this.MenuBGColor = this.MenuColor;\r\n    if (!this.HoverMenuColor) {\r\n      this.HoverMenuColor = 'grey';\r\n    }\r\n  }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SideNavComponent } from './controls/side-nav/side-nav.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FathymSharedModule, MaterialModule } from '@lcu/common';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@NgModule({\r\n  declarations: [SideNavComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FlexLayoutModule,\r\n    FathymSharedModule,\r\n    MaterialModule,\r\n    MatSidenavModule,\r\n    MatIconModule\r\n  ],\r\n  exports: [SideNavComponent],\r\n  entryComponents: [SideNavComponent]\r\n})\r\nexport class LcuHamburgerMenuSideNavModule { }\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'landingPage', pathMatch: 'full'},\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","    <!-- [opened-subject]=\"openedSubject\" -->\r\n    <lcu-side-nav (nav-item-clicked)=\"NavItemClicked($event)\" \r\n    [menu-items]=\"Items\" \r\n    [opened-subject]=\"openedSubject\" \r\n    [menu-color]=\"Color\" \r\n    [hover-menu-color]=\"HoverColor\"\r\n    [button-background-color]=\"ButtonBgColor\"\r\n    [button-background-color-hover]=\"ButtonHoverBgColor\"\r\n    [font-color]=\"FontColor\"></lcu-side-nav>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { OverlayContainer } from '@angular/cdk/overlay';\r\nimport { NavigationConstants } from './utils/constants/navigation.constants';\r\nimport { NavLinkModel } from 'projects/common/src/lib/models/nav-link.model';\r\nimport { Subject } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'lcu-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\n\r\nexport class AppComponent implements OnInit {\r\n\r\n  public Items: Array<NavLinkModel> = new Array<NavLinkModel>();\r\n\r\n  public Color: string;\r\n  public HoverColor: string;\r\n  public ButtonBgColor: string;\r\n  public ButtonHoverBgColor: string;\r\n  public FontColor: string;\r\n  openedSubject = new Subject<boolean>();\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected activatedRoute: ActivatedRoute,\r\n    protected overlayContainer: OverlayContainer) {\r\n      this.Color = 'black';\r\n      this.HoverColor = '#FF9849';\r\n      this.ButtonBgColor = 'white';\r\n      this.ButtonHoverBgColor = 'red';//'#f4f4f3'\r\n      this.FontColor = '#8b868d';\r\n\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.Items = NavigationConstants.MENU_ITEMS;\r\n  }\r\n\r\n  public toggleSide(){\r\n    this.openedSubject.next(false);\r\n  }\r\n\r\n  public NavItemClicked(item: any) {\r\n    console.log(item);\r\n  }\r\n\r\n}\r\n","import { LcuHamburgerMenuSideNavModule } from './../../../common/src/lib/lcu-hamburger-menu-side-nav.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FathymSharedModule, MaterialModule } from '@lcu/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSidenavModule } from '@angular/material/sidenav'\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    FlexLayoutModule,\r\n    FathymSharedModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    LcuHamburgerMenuSideNavModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NavLinkModel } from 'projects/common/src/lib/models/nav-link.model';\r\n\r\n// @dynamic\r\n/**\r\n * @dynamic is used because this class contains static properties\r\n *\r\n * Used to build the items in the navigation menu\r\n */\r\n\r\nexport class NavigationConstants{\r\n    public static readonly MENU_ITEMS: Array<NavLinkModel> = [\r\n        {Label: 'Maps', Url:'/landingPage', Disabled:'false', Icon: 'map',},\r\n        {Label: 'Iteneraries', Url:'', Disabled:'false', Icon: 'public'},\r\n        {Label: 'Top Lists', Url:'www', Disabled:'true', Icon: 'sort'},\r\n        {Label: 'Albums', Url:'www', Disabled:'true', Icon: 'photo_library'},\r\n        {Label: 'Friends', Url:'www', Disabled:'true', Icon: 'photo_library'},\r\n        {Label: 'Profile', Url:'www', Disabled:'true', Icon: 'person'}];\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}